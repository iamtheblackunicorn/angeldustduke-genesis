---
layout: post
date_time: "2022/04/08"
description: "How websites, computers, and blogs work, explained using some psychedelics. (Part I)"
title: "Blogging with Acid Part I."
show: true
isSpecial: true
tags: "static-site-generator rust programming acid cms"
---

## DISCLAIMER!!

This post is part of a special series of posts, which are part of a uni project.

## Introduction

Hi! :) I'm glad you're here. If you've read my last post, you will know exactly what [Rust](https://www.rust-lang.org/), [Acid](https://blckunicorn.art/acid/), and [Blogging](https://dictionary.cambridge.org/de/worterbuch/englisch/blog) are. However, in this post I would like to introduce you to these three terms in such a way that you can understand each of them without any background in coding.

## What is Blogging?

The term *"Blogging"* refers to the activity of posting content of one's choosing on a *"weblog"*, or *"blog"*. These blogs usually consist of a short welcoming page, that lists all the blog's posts, and links to these posts. Such a post is usually text of some length on a topic of some kind. Now that you know what a blog is, let's dive into how such a blog works "under the hood". For this, we need to understand what the web is. The internet is a network of different computers that are interconnected and share different files. The most common filetype shared between these computers is a so-called HTML file. These are the files you see when you open a webpage in a browser. Since the web can be viewed in a browser, what one sees, must be written in a language that the browser can understand. This language is HTML. The pages are styled and made by pretty by another language called CSS. Blogs are basically a set of HTML files sitting on a computer somewhere accessible under the address that you type into your browser. (The CSS files for this blog are also sitting somewhere on the same computer.) These HTML files can be generated in a number of ways. Some systems, like Wordpress, let you dynamically change these HTML pages by typing each post into Wordpress's user-interface. Others, like Squarespace, manage this the same way but by giving you a choice of different so-called "pre-fabricated templates" which are HTML files that determine how your page will look and then let you fill in your post content. Others, more-old-fashioned tools, let you write a bunch of text files in some simplified form of HTML, like Markdown or RST and generate your blog from this. One of these tools is Jekyll. Jekyll does just that. It lets you write your content in Markdown form because it doesn't want to bother people with HTML. It then generates your web pages for your blog from these Markdown files. This blog, is, in fact, a Jekyll blog.

Programs like Jekyll need to be written in a programming language, however! Programming languages are languages that give humans the ability to tell computers to do all sorts of things. Jekyll was written in programming language called Ruby. But what are "Rust" and "Acid"?

## What is Rust?

Because I was scared that Jekyll would soon fall into disuse, since the language Ruby is not being used very widely, I decided to write something like Jekyll but in a different programming language. This language is Rust! What is the difference between Ruby and Rust? Let me tell you! In the field of programming, there are two types of programming languages. The first type are so-called "interpreted languages" and the second type are so-called "compiled languages". When you run a piece of software on your computer, what happens? The computer reads the ones and zeros stored in a software program, understands them, and executes what it understands. The execution is you seeing the calculator app calculating something when you open it on your computer. But these instructions for the computer have to be generated by someone. That someone is the software developer, who writes some code that gets turned into ones and zeros for the computer. But since humans cannot understand ones and zeros, we write instructions in languages like Rust or Ruby that subsequently get turned into ones and zeros. Now in interpreted languages, when the developer writes code in Ruby, there is a program called an interpreter. This program reads your instructions line by line and does whatever it can see. No ones and zeros are generated from this. The interpreter does all the heavy lifting of generating ones and zeros and executing these *on the fly*. No file with ones and zeros inside it is generated by the interpreter. With Rust, a compiled language, things are different. A program, called the compiler,reads your instructions for the computer, which you've written in Rust and *actually generates a file in which it dumps the ones and zeros*. This file is then a program that we know as a piece of software. A game, a calculator, etc.

## What is Acid?

Good, now we know how blogs work, how programming languages work, and how software is built. Now for the final part: You remember me mentioning that I was scared that Jekyll was going to fall into being obsolete soon? And how I wrote an alternative program that works in a similar fashion to generate a blog website? Well, that program is called *Acid*. Why? I'm not sure, I felt like the *Angeldust Duke (Me)* should have a project called *Acid*. *Acid* is like Jekyll, it takes a bunch of text files which are written in a simplified form of HTML, namely Markdown, and generates a website from these text files. Now you might be asking: "Well, sure, but how would one style such a site?" I'm glad you asked! The styling and structuring of the HTML pages happens over so-called "templates". These templates are HTML files with certain fields that can be filled with a user's content. Each of these fields has a name and value. The person, who makes the template and decides on the styling of your blog, gives the fields in the template the name and you give the field its content. *Acid* then tries to make sense out of all of this and tries to generate a blog website from this.

## Conclusion.

So! Now you know, how the web works, what software is, what a programming language is, what Jekyll and Acid are, and finally what Markdown is! Not bad! Pat yourself on the shoulder. I hope this short post explains the whole process top to bottom and that maybe you learned something from this. If you would like to contact me or you have some feedback, feel free to DM me on [Twitter](https://twitter.com/angeldustduke). If you'd like to support me and buy me a coffee, you can send me some Ethereum tokens to [this address](0x5d7551C484bCd8769c57B4921a3FC80193b74Ce3
) (You'll have to hover over the link and copy the ETH address.).

## Links

If you'd like to check out the *Acid* project, click [here](https://github.com/iamtheblackunicorn/acid) or if you'd like to check out the Jekyll project, click [here](https://jekyllrb.com/). If you'd like to see this blog's source as a Jekyll project, click [here](https://github.com/iamtheblackunicorn/angeldustduke).
